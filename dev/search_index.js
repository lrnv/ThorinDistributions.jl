var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = ThorinDistributions","category":"page"},{"location":"#ThorinDistributions","page":"Home","title":"ThorinDistributions","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [ThorinDistributions]","category":"page"},{"location":"#ThorinDistributions.MultivariateGamma","page":"Home","title":"ThorinDistributions.MultivariateGamma","text":"MultivariateGamma(α,θ)\n\nConstruct a distribution that correspond to several comonotonous gammas with common shapes α and respectives scales θ[i]. The distribution can then be used through several methods, following the Distributions.jl standard, mainly to obtain samples.\n\nThe code is type stable and handles any <:Real types, given by the parameters.\n\nNote that the supprot of this distribution is a half-line in the d-dimensional space, [0,+∞], with angle given by θ.\n\nExamples\n\njulia> dist = MultivariateGamma(2,[3,4,5]);\njulia> sample = zeros(Float64,(3,10));\njulia> Random.rand!(dist,sample);\n\n\n\n\n\n","category":"type"},{"location":"#ThorinDistributions.MultivariateGammaConvolution","page":"Home","title":"ThorinDistributions.MultivariateGammaConvolution","text":"MultivariateGammaConvolution(α,θ)\n\nConstructs a distribution that corresponds to the convolutions of MutlivariateGamma(α[i],θ[i,:]) distributions. The distribution can then be used through several methods, following the Distributions.jl standard\n\nThe pdf and cdf and not yet coded. The code is type stable and handles any <:Real types, given by the parameters.\n\nFitting th edistribution is not yet possible.\n\nExamples\n\njulia> dist = MultivariateGammaConvolution([2,3,1],[3 0;4 0;0 1]);\njulia> sample = zeros(Float64,(2,10));\njulia> Random.rand!(dist,sample);\n\n\n\n\n\n\n","category":"type"},{"location":"#ThorinDistributions.UnivariateGammaConvolution","page":"Home","title":"ThorinDistributions.UnivariateGammaConvolution","text":"UnivariateGammaConvolution(α,θ)\n\nConstructs a distribution that corresponds to the convolutions of Gamma(α[i],θ[i]) distributions. The distribution can then be used through several methods, following the Distributions.jl standard, to obtain pdf, cdf, random samples...\n\nThe pdf and cdf are handled by the Moshopoulos algorithm, and random samples by simply adding random gammas. The code is type stable and handles any <:Real types, given by the parameters.\n\nTo fit the distribution, a loglikelyhood approach could be used. A more involved approach from Furman might be coded sometimes (but requires tanh-sinh integration and bigfloats...)\n\nExamples\n\njulia> dist = UnivariateGammaConvolution([1,0.5, 3.7],[4,2, 10]);\njulia> sample = zeros(Float64,10);\njulia> Random.rand!(dist,sample);\njulia> pdf.((dist,),sample);\n\n\n\n\n\n","category":"type"},{"location":"#Distributions.convolve-Tuple{Distributions.Gamma,Distributions.Gamma}","page":"Home","title":"Distributions.convolve","text":"Distributions.convolve(d1,d2)\n\nImplements the special case of covolutions of two Gamma distributions to output UnivariateGammaDistributions. Also works with d1 a gamma and d2 a UnivariateGammaConvolution, and vice versa.\n\n\n\n\n\n","category":"method"},{"location":"#Distributions.product_distribution-Tuple{AbstractArray{var\"#s49\",1} where var\"#s49\"<:ThorinDistributions.UnivariateGammaConvolution}","page":"Home","title":"Distributions.product_distribution","text":"Distributions.product_distribution(d1,d2)\n\nImplements the special case of the product of two gamma or univariate gamma convolutions distributions, and output as the result a multivariate gamma convolution with independent margins.\n\n\n\n\n\n","category":"method"}]
}
