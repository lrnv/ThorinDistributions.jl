import ThorinDistributions as TD
using Test

@testset "UnivariateGammaConvolution.jl tests" begin 

    dist = TD.UnivariateGammaConvolution([1,0.5, 3.7],[4,2, 10])
   
    @testset "functions are working and consistant with past selves." begin
        spl = [
            44.21448353310021,
            40.67778979017133,
            38.67640776714249,
            23.525094134635108,
            23.38644058822338,
            29.498656708345194,
            35.340080215403574,
            56.380727733998995,
            25.52972573138749,
            51.20505953884155
            ]
            x = pdf.(dist,spl)
            x_fixed = [
            0.018757112919480665,
            0.020559416575509366,
            0.02140738452673978,
            0.019147239099563968,
            0.019031193841015707,
            0.02236341049555192,
            0.02240803708392265,
            0.011765753186399592,
            0.020617044066218452,
            0.014700161862923838
            ]
        
            y = cdf.(dist,spl)
            y_fixed = [
            0.6082512562725385,
            0.5386338347308577,
            0.49661228006226665,
            0.16557008552908928,
            0.16292327691403613,
            0.29129135121181804,
            0.4233565994115752,
            0.7937252726673726,
            0.20549205556263866,
            0.725339366143653
            ]
        
        @test x ≈ x_fixed
        @test y ≈ y_fixed
    end




    @testset "results of pdf and cdf are consistant with R coga" begin
        # We check against COGA from R on this simple example.
        # > library(coga)
        # > options(digits=20)
        # > coga::dcoga(1:10,c(1,0.5,3.7),1/c(4,2,10))
        #  [1] 9.1697877166357581e-07 1.4306872316747290e-05 6.6823198132184901e-05
        #  [4] 1.9070137722253317e-04 4.1580841085495259e-04 7.6517030290220020e-04
        #  [7] 1.2530854177965063e-03 1.8849283018035432e-03 2.6579560778065099e-03
        # [10] 3.5626340599333940e-03
        # > coga::pcoga(1:10,c(1,0.5,3.7),1/c(4,2,10))
        #  [1] 1.8115256558630823e-07 5.8062605413247208e-06 4.1780076813316473e-05
        #  [4] 1.6327100296424765e-04 4.5700519074037604e-04 1.0364052739079920e-03
        #  [7] 2.0336306415139858e-03 3.5906428800766086e-03 5.8506245787791631e-03
        # [10] 8.9504969486005927e-03
        # > 
   
        values = Float64.(1:10)
        p = pdf.(dist,values)
        c = cdf.(dist,values)
        pᵣ = [
        9.1697877166357581e-07,
        1.4306872316747290e-05,
        6.6823198132184901e-05,
        1.9070137722253317e-04,
        4.1580841085495259e-04,
        7.6517030290220020e-04,
        1.2530854177965063e-03,
        1.8849283018035432e-03,
        2.6579560778065099e-03,
        3.5626340599333940e-03
        ]
        cᵣ = [
        1.8115256558630823e-07,
        5.8062605413247208e-06,
        4.1780076813316473e-05,
        1.6327100296424765e-04,
        4.5700519074037604e-04,
        1.0364052739079920e-03,
        2.0336306415139858e-03,
        3.5906428800766086e-03,
        5.8506245787791631e-03,
        8.9504969486005927e-03
        ]
        @test round.(p,digits=10) ≈ round.(pᵣ,digits=10)
        @test round.(c,digits=10) ≈ round.(cᵣ,digits=10)
    end

end



